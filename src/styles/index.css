@tailwind base;
@tailwind components;
@tailwind utilities;

/* 主题颜色变量 */
:root {
  --color-primary: #00ff9d;      /* 霓虹绿 */
  --color-secondary: #bd93f9;    /* 紫色 */
  --color-bg: #0d0d0d;           /* 深黑背景 */
  --color-text: #f8f8f2;         /* 浅灰文本 */
  --color-accent: #ff79c6;       /* 粉色强调 */
}

/* 暗黑模式支持 */
@media (prefers-color-scheme: dark) {
  :root {
    --color-bg: #0d0d0d;
    --color-text: #f8f8f2;
  }
}

/* 全局样式 */
body {
  @apply bg-[var(--color-bg)] text-[var(--color-text)] font-mono transition-colors duration-300;
  background-image: 
    radial-gradient(circle at 10% 20%, rgba(13, 13, 13, 0.9) 0%, rgba(13, 13, 13, 0.95) 100%),
    linear-gradient(to bottom, rgba(189, 147, 249, 0.05) 0%, transparent 100%);
  min-height: 100vh;
}

/* 霓虹文字效果 */
.neon-text {
  text-shadow: 
    0 0 5px var(--color-primary),
    0 0 10px var(--color-primary),
    0 0 20px var(--color-primary);
}

/* 闪烁光标效果 */
@keyframes blink {
  0%, 100% { opacity: 1; }
  50% { opacity: 0; }
}

.cursor-blink {
  animation: blink 1s step-end infinite;
}

/* 链接样式 */
a {
  @apply text-[var(--color-secondary)] transition-all duration-300 relative;
}

a:hover {
  @apply text-[var(--color-accent)];
}

a::after {
  content: '';
  position: absolute;
  bottom: -2px;
  left: 0;
  width: 100%;
  height: 1px;
  background: currentColor;
  transform: scaleX(0);
  transform-origin: right;
  transition: transform 0.3s ease;
}

a:hover::after {
  transform: scaleX(1);
  transform-origin: left;
}

/* 按钮样式 */
button {
  @apply px-4 py-2 rounded border border-[var(--color-secondary)] text-[var(--color-secondary)] bg-transparent transition-all duration-300 relative overflow-hidden;
}

button:hover {
  @apply text-[var(--color-bg)] bg-[var(--color-secondary)] border-[var(--color-secondary)] shadow-[0_0_10px_var(--color-secondary)];
}

button::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(189, 147, 249, 0.4), transparent);
  transition: 0.5s;
}

button:hover::before {
  left: 100%;
}

/* 输入框样式 */
input, select {
  @apply bg-[#1a1a1a] border border-[#6272a4] text-[var(--color-text)] p-2 rounded focus:outline-none focus:ring-2 focus:ring-[var(--color-secondary)];
}

/* 故障文字效果 */
.glitch {
  position: relative;
  color: var(--color-primary);
  font-weight: bold;
  animation: glitch 1s infinite;
}

.glitch::before,
.glitch::after {
  content: attr(data-text);
  position: absolute;
  left: 0;
  width: 100%;
  overflow: hidden;
  clip: rect(0, 900px, 0, 0);
}

.glitch::before {
  animation: glitchTop 1s infinite;
  color: var(--color-accent);
  z-index: -1;
}

.glitch::after {
  animation: glitchBottom 1s infinite;
  color: var(--color-secondary);
  z-index: -2;
}

@keyframes glitch {
  0% {
    transform: none;
  }
  20% {
    transform: skew(-0.5deg, -0.9deg);
  }
  40% {
    transform: skew(0.8deg, -0.1deg);
  }
  60% {
    transform: skew(-1deg, 0.2deg);
  }
  80% {
    transform: skew(0.3deg, 0.6deg);
  }
  100% {
    transform: none;
  }
}

@keyframes glitchTop {
  0% {
    clip: rect(0, 9999px, 0, 0);
    transform: translate(-2px, -2px);
  }
  50% {
    clip: rect(0, 9999px, 0, 0);
    transform: translate(2px, 2px);
  }
  100% {
    clip: rect(0, 9999px, 0, 0);
    transform: translate(-2px, -2px);
  }
}

@keyframes glitchBottom {
  0% {
    clip: rect(0, 9999px, 0, 0);
    transform: translate(2px, 2px);
  }
  50% {
    clip: rect(0, 9999px, 0, 0);
    transform: translate(-2px, -2px);
  }
  100% {
    clip: rect(0, 9999px, 0, 0);
    transform: translate(2px, 2px);
  }
}
